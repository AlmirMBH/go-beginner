1. If a variable or function starts with a capital letter it is considered exported and it can be accessed outside
of the package.
2. If we do not want to handle errors, just write '_' instead of err
3. Data types and their default values: int = 0, float64 = 0.0, bool = false, string = "", rune = ""
4. The compiler determines the type, if we do not
   - variables are mutable but the their type cannot be changed (no colon in front of equal sign required)
   - var v1, v2 = 1.2, 3.4
   - var vr = "Hello"
   - v4 := 2.4
   - v4 = 5.4
5. Byte and rune
Golang has integer types called byte and rune that are aliases for uint8 and int32 data types, respectively.
In Go, the byte and rune data types are used to distinguish characters from integer values.
In Go, there is no char data type. It uses byte and rune to represent character values.
The byte data type represents ASCII characters while the rune data type represents a more broader set of 
Unicode characters that are encoded in UTF-8 format.
The default type for character values is rune, which means, if we don't declare a type explicitly when 
declaring a variable with a character value, then Go will infer the type as rune.

